version: "3.6"
services:
  lapp:
    depends_on:
      - hbp
    container_name: lapp
    image: asoltys/lnft-server
    restart: on-failure
    command: ["pnpm", "dev"]
    environment:
      APP_URL: "${APP_URL}"
      SERVER_URL: "${SERVER_URL}"
      HASURA_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      CLOUDFLARE_TOKEN: "${CLOUDFLARE_TOKEN}"
      CLOUDFLARE_ZONE: "${CLOUDFLARE_ZONE}"
      DOMAIN: "${DOMAIN}"
      COINOS_URL: "${COINOS_URL}"
      COINOS_TOKEN: "${COINOS_TOKEN}"
      HASURA_URL: "${HASURA_URL}"
      HASURA_JWT: "${HASURA_GRAPHQL_JWT_SECRET}"
      LIQUID_ELECTRS_URL: "${LIQUID_ELECTRS_URL}"
      HBP_URL: "${HBP_URL}"
      IPFS_URL: "${IPFS_URL}"
      IPFS_WEB_URL: "${IPFS_WEB_URL}"
      SIGNING_SERVER_MNEMONIC: "${SIGNING_SERVER_MNEMONIC}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USER: "${SMTP_USER}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_SENDER: "${SMTP_SENDER}"
      AUTH_EVENT_VALUE: '${AUTH_EVENT_VALUE}'
    volumes:
      - ./app:/app
      - ./custom:/opt/src/hasura/app/custom
      - ${STORAGE_DIR}:/export
    ports:
      - "8091:8091"
    networks:
      default:
        ipv4_address: 172.18.0.12
  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ${DATA_DIR}:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      default:
        ipv4_address: 172.18.0.13
  hasura:
    logging:
      options:
        max-size: "50k"
        max-file: "3"
    container_name: hasura
    image: hasura/graphql-engine:v2.7.0.cli-migrations-v3
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
      HASURA_GRAPHQL_DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_USER}"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_JWT_SECRET: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      SERVER_URL: '${SERVER_URL}'
      AUTH_EVENT_VALUE: '${AUTH_EVENT_VALUE}'
    networks:
      default:
        ipv4_address: 172.18.0.14
  hbp:
    container_name: hbp
    image: nhost/hasura-backend-plus:v2.2.4
    depends_on:
      - hasura
    ports:
      - "3400:3000"
    environment:
      SERVER_URL: "${SERVER_URL}"
      HASURA_ENDPOINT: "${HASURA_URL}/v1/graphql"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      JWT_ALGORITHM: "${JWT_ALGORITHM}"
      JWT_KEY: "${JWT_KEY}"
      AUTO_MIGRATE: "true"
      AUTO_ACTIVATE_NEW_USERS: "true"
      STORAGE_ENABLE: "false"
      MAX_REQUESTS: 10000
      LOST_PASSWORD_ENABLE: "true"
      EMAILS_ENABLE: "true"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USER: "${SMTP_USER}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_SENDER: "${SMTP_SENDER}"
    volumes:
      - ./custom:/app/custom
    networks:
      default:
        ipv4_address: 172.18.0.15
  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs
    ports:
      - 8081:8080
      - 4001:4001
      - 5001:5001
    volumes:
      - ${IPFS_DATA}:/data/ipfs
      - ${STORAGE_DIR}:/export
    networks:
      default:
        ipv4_address: 172.18.0.16
networks:
  default:
    external:
      name: net
