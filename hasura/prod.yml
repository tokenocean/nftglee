version: "3.6"
services:
  pg_backup:
    container_name: pg_backup
    image: gcr.io/coinos-326717/github.com/tokenocean/pg_backup:latest
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_URL: "${HASURA_URL}"
      PROJECT_NAME: "tokenocean-nftglee"
      ENV_NAME: "staging"
    restart: on-failure
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    environment:
      - DEFAULT_EMAIL=abdullah@autonomoustech.ca
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
  ui:
    depends_on:
      - lapp
    container_name: ui
    image: gcr.io/coinos-326717/github.com/tokenocean/nftglee:staging
    restart: on-failure
    ports:
      - "3000:3000"
    environment:
      VIRTUAL_HOST: nftglee.tokenocean.io
      VIRTUAL_PORT: 3000
      VIRTUAL_PATH: "/"
      LETSENCRYPT_HOST: nftglee.tokenocean.io
      LETSENCRYPT_EMAIL: abdullah@autonomoustech.ca
  lapp:
    depends_on:
      - hbp
    container_name: lapp
    image: gcr.io/coinos-326717/github.com/tokenocean/nftglee-server:staging
    restart: on-failure
    environment:
      NODE_ENV: production
      APP_URL: "${APP_URL}"
      SERVER_URL: "${SERVER_URL}"
      HASURA_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      CLOUDFLARE_TOKEN: "${CLOUDFLARE_TOKEN}"
      CLOUDFLARE_ZONE: "${CLOUDFLARE_ZONE}"
      DOMAIN: "${DOMAIN}"
      COINOS_URL: "${COINOS_URL}"
      COINOS_TOKEN: "${COINOS_TOKEN}"
      HASURA_URL: "${HASURA_URL}"
      HASURA_JWT: "${HASURA_GRAPHQL_JWT_SECRET}"
      LIQUID_ELECTRS_URL: "${LIQUID_ELECTRS_URL}"
      HBP_URL: "${HBP_URL}"
      IPFS_URL: "${IPFS_URL}"
      IPFS_WEB_URL: "${IPFS_WEB_URL}"
      SIGNING_SERVER_MNEMONIC: "${SIGNING_SERVER_MNEMONIC}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USER: "${SMTP_USER}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_SENDER: "${SMTP_SENDER}"
      SMTP_SECURE: "true"
      VIRTUAL_HOST: nftglee.tokenocean.io
      VIRTUAL_PORT: 8091
      VIRTUAL_PATH: "/api/"
    volumes:
      - ./custom:/opt/src/hasura/app/custom
      - ${STORAGE_DIR}:/export
    ports:
      - "8091:8091"
  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    environment:
      POSTGRES_PASSWORD: postgrespassword
    volumes:
      - ${DATA_DIR}:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  hasura:
    container_name: hasura
    image: hasura/graphql-engine:v2.0.9.cli-migrations-v3
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
      - ./seeds:/hasura-seeds
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_JWT_SECRET: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      VIRTUAL_HOST: nftglee.tokenocean.io
      VIRTUAL_PORT: 8080
      VIRTUAL_PATH: "~^/(v1|v2|console)/"
  hbp:
    container_name: hbp
    image: nhost/hasura-backend-plus:v2.2.3
    depends_on:
      - hasura
    ports:
      - "3400:3000"
    environment:
      SERVER_URL: "${SERVER_URL}"
      HASURA_ENDPOINT: "${HASURA_URL}/v1/graphql"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      JWT_ALGORITHM: "${JWT_ALGORITHM}"
      JWT_KEY: "${JWT_KEY}"
      AUTO_MIGRATE: "true"
      AUTO_ACTIVATE_NEW_USERS: "true"
      STORAGE_ENABLE: "false"
      MAX_REQUESTS: 10000
      LOST_PASSWORD_ENABLE: "true"
      EMAILS_ENABLE: "true"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USER: "${SMTP_USER}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_SENDER: "${SMTP_SENDER}"
      SMTP_SECURE: "true"
    volumes:
      - ./custom:/app/custom
  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs
    ports:
      - 8081:8080
      - 4001:4001
      - 5001:5001
    volumes:
      - ${IPFS_DATA}:/data/ipfs
      - ${STORAGE_DIR}:/export
volumes:
  conf:
  vhost:
  html:
  certs:
  acme:
